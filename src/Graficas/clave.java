package Graficas;


import Conexion_BD.Conexion;
import java.awt.Color;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;


/**
 *
 * @author ediso
 */
public class clave extends javax.swing.JInternalFrame {

    public clave() {
        initComponents();
        setTitle("Cambiar Clave");
        setSize(new Dimension(400, 300));

      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_wallpaper = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ok = new javax.swing.JButton();
        txtclave = new javax.swing.JTextField();
        txtuser = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jLabel_wallpaper.setBackground(new java.awt.Color(51, 51, 51));
        jLabel_wallpaper.setForeground(new java.awt.Color(51, 51, 51));

        setClosable(true);
        setIconifiable(true);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ok.setText("Ok");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        jPanel1.add(ok, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, -1, -1));

        txtclave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtclaveKeyPressed(evt);
            }
        });
        jPanel1.add(txtclave, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 100, -1));

        txtuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtuserActionPerformed(evt);
            }
        });
        txtuser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtuserKeyPressed(evt);
            }
        });
        jPanel1.add(txtuser, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 100, -1));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Clave");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Usuario");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtuserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtuserActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
agregar();  
        
    }//GEN-LAST:event_okActionPerformed

    private void txtuserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtuserKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
                txtclave.requestFocus();
      }
    }//GEN-LAST:event_txtuserKeyPressed

    private void txtclaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtclaveKeyPressed
      if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
                txtuser.requestFocus();
                agregar();
      }
    }//GEN-LAST:event_txtclaveKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton ok;
    private javax.swing.JTextField txtclave;
    private javax.swing.JTextField txtuser;
    // End of variables declaration//GEN-END:variables

    //Metodo para caragar los productos en el jComboBox



private void agregar(){
      try {
    // Establecer la conexión a la base de datos
    Connection conexion = Conexion.conectar();

    String nombre = txtuser.getText();
    String password = txtclave.getText();

    // Verificar si los campos están vacíos
    if (nombre.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Por favor ingrese un usuario y una contraseña");
        return;
    }

    // Eliminar todos los usuarios existentes
    String consultaEliminar = "DELETE FROM usuario";
    PreparedStatement psEliminar = conexion.prepareStatement(consultaEliminar);
    int filasEliminadas = psEliminar.executeUpdate();

    // Verificar si se eliminaron los usuarios correctamente
    if (filasEliminadas > 0) {
        System.out.println("Se eliminaron " + filasEliminadas + " usuarios existentes.");
    } else {
        System.out.println("No se encontraron usuarios para eliminar.");
    }

    // Agregar un nuevo usuario
    String consultaAgregar = "INSERT INTO usuario (user, password) VALUES (?, ?)";
    PreparedStatement psAgregar = conexion.prepareStatement(consultaAgregar);
    psAgregar.setString(1, nombre);
    psAgregar.setString(2, password);
    int resultado = psAgregar.executeUpdate();

    // Verificar si se agregó el usuario correctamente
    if (resultado > 0) {
        JOptionPane.showMessageDialog(null, "Usuario agregado correctamente.");
    } else {
        JOptionPane.showMessageDialog(null, "No se pudo agregar el usuario.");
    }

    // Cerrar los statements y la conexión
    psEliminar.close();
    psAgregar.close();
    conexion.close();
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error al interactuar con la base de datos: " + e.getMessage());
}

}
}
